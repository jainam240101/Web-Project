{"ast":null,"code":"var _jsxFileName = \"/Users/Pranavkapoor1/Downloads/Web-Project-master/client/src/shared/contexts/ThemeContext.jsx\";\nimport React, { createContext, useState } from 'react';\nexport const themes = {\n  light: {\n    backgroundColor: '#FFFFFF',\n    color: '#2F3C7E',\n    imagePeecheki: '../../../src/assets/randiimg1.jpeg'\n  },\n  dark: {\n    backgroundColor: '#1B263B',\n    color: '#FBEAEB',\n    imagePeecheki: '../src/assets/randiimg2.jpeg'\n  }\n};\nexport const ThemeContext = createContext(themes.light);\nconst ThemeContextProvider = props => {\n  const [currentTheme, setCurrentTheme] = useState(themes.light);\n  const toggleTheme = () => {\n    currentTheme === themes.light ? setCurrentTheme(themes.dark) : setCurrentTheme(themes.light);\n  };\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: {\n      currentTheme,\n      toggleTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, props.children);\n};\nexport default ThemeContextProvider;","map":{"version":3,"names":["React","createContext","useState","themes","light","backgroundColor","color","imagePeecheki","dark","ThemeContext","ThemeContextProvider","props","currentTheme","setCurrentTheme","toggleTheme","children"],"sources":["/Users/Pranavkapoor1/Downloads/Web-Project-master/client/src/shared/contexts/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const themes = { \n    \n    light: {\n        backgroundColor: '#FFFFFF',\n        color: '#2F3C7E',\n       imagePeecheki: '../../../src/assets/randiimg1.jpeg'\n       \n    },\n    dark: {\n        backgroundColor: '#1B263B',\n        color: '#FBEAEB',\n        imagePeecheki: '../src/assets/randiimg2.jpeg'\n        \n\n    }\n    \n}\n\nexport const ThemeContext = createContext(themes.light);\n\nconst ThemeContextProvider = (props) => {\n\n    const [ currentTheme, setCurrentTheme ] = useState(themes.light);\n\n    const toggleTheme = () => {\n        currentTheme === themes.light ? \n        setCurrentTheme(themes.dark):\n        setCurrentTheme(themes.light)\n    }\n\n    return (\n        <ThemeContext.Provider value={{currentTheme, toggleTheme}}>\n            {props.children}\n        </ThemeContext.Provider>\n    )\n}\n\nexport default ThemeContextProvider"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAEtD,OAAO,MAAMC,MAAM,GAAG;EAElBC,KAAK,EAAE;IACHC,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE,SAAS;IACjBC,aAAa,EAAE;EAElB,CAAC;EACDC,IAAI,EAAE;IACFH,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE,SAAS;IAChBC,aAAa,EAAE;EAGnB;AAEJ,CAAC;AAED,OAAO,MAAME,YAAY,GAAGR,aAAa,CAACE,MAAM,CAACC,KAAK,CAAC;AAEvD,MAAMM,oBAAoB,GAAIC,KAAK,IAAK;EAEpC,MAAM,CAAEC,YAAY,EAAEC,eAAe,CAAE,GAAGX,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC;EAEhE,MAAMU,WAAW,GAAG,MAAM;IACtBF,YAAY,KAAKT,MAAM,CAACC,KAAK,GAC7BS,eAAe,CAACV,MAAM,CAACK,IAAI,CAAC,GAC5BK,eAAe,CAACV,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,oBACI,oBAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACQ,YAAY;MAAEE;IAAW,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrDH,KAAK,CAACI,QAAQ,CACK;AAEhC,CAAC;AAED,eAAeL,oBAAoB"},"metadata":{},"sourceType":"module"}